generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACTIVE
  INACTIVE
}

model Product {
  id            Int          @id @default(autoincrement())
  name          String
  description   String?
  price         Float
  categoryId    Int
  category      Category     @relation(fields: [categoryId], references: [id])
  subCategoryId Int?
  subCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  brandId       Int?
  brand         Brand?       @relation(fields: [brandId], references: [id])
  imagePath     String       @default("https://res.cloudinary.com/dkvqtc5pb/image/upload/v1737433308/products/1737433306032-taherul.PNG.png") 
  status        Status       @default(ACTIVE)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  colors        ProductColor[]
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String        @db.VarChar(255)
  title         String?       @db.VarChar(255)
  status        Status        @default(ACTIVE)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  products      Product[]
  subcategories SubCategory[]
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  title      String?   @db.VarChar(255)
  status     Status    @default(ACTIVE)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  categoryId Int
  category   Category  @relation(fields: [categoryId], references: [id])
  products   Product[]
}

model Brand {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  title     String?   @db.VarChar(255)
  status    Status    @default(ACTIVE)
  image     String?   @default("https://res.cloudinary.com/dkvqtc5pb/image/upload/v1737433308/products/1737433306032-taherul.PNG.png")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Color {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  hexCode   String    @db.VarChar(7) // Hex code for the color
  status    Status    @default(ACTIVE)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  ProductColor[]
}

model ProductColor {
  productId Int
  colorId   Int
  product   Product @relation(fields: [productId], references: [id])
  color     Color   @relation(fields: [colorId], references: [id])
  @@id([productId, colorId])
}